{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNWj0A4V8UrhlclnSVyh+T8"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["Імпорт усіх бібліотек потрібних для виконання даної лабораторної роботи"],"metadata":{"id":"ZS6BvVvDrV40"}},{"cell_type":"code","execution_count":7,"metadata":{"id":"QYDbdspMmjn3","executionInfo":{"status":"ok","timestamp":1715548512952,"user_tz":-180,"elapsed":340,"user":{"displayName":"Ferk “Кирил Бойко”","userId":"11765411755066296376"}}},"outputs":[],"source":["from sklearn import datasets\n","import pandas as pd\n","import numpy as np\n","from sklearn.model_selection import train_test_split\n","from sklearn.ensemble import RandomForestClassifier\n","from sklearn import svm\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.naive_bayes import GaussianNB\n","from sklearn.model_selection import KFold, cross_val_score,  cross_val_predict\n","from matplotlib import pyplot as plt\n","import seaborn as sns\n","from sklearn.metrics import accuracy_score, classification_report, confusion_matrix, f1_score, \\\n","log_loss, recall_score, precision_score\n","from sklearn.model_selection import GridSearchCV\n","sns.set_style(\"whitegrid\")\n","%matplotlib inline\n","from sklearn.cluster import KMeans"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"l5grIzW8pagc","executionInfo":{"status":"ok","timestamp":1715548516726,"user_tz":-180,"elapsed":1944,"user":{"displayName":"Ferk “Кирил Бойко”","userId":"11765411755066296376"}},"outputId":"1e147c38-8186-4759-8e58-62088659cc88"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"markdown","source":["Запис даних як змінної Pandas та їх відображення"],"metadata":{"id":"ahDGHjKcqX07"}},{"cell_type":"code","source":["df=pd.read_csv('/content/drive/MyDrive/LNU/2 course/2 semester/Data processing systems/Datasets/Mall_Customers.csv')\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"6EywWOxCpRpH","executionInfo":{"status":"ok","timestamp":1715548518327,"user_tz":-180,"elapsed":6,"user":{"displayName":"Ferk “Кирил Бойко”","userId":"11765411755066296376"}},"outputId":"29367ab5-2235-462c-97db-2e0ef05de8d7"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   CustomerID   Genre  Age  Annual Income (k$)  Spending Score (1-100)\n","0           1    Male   19                  15                      39\n","1           2    Male   21                  15                      81\n","2           3  Female   20                  16                       6\n","3           4  Female   23                  16                      77\n","4           5  Female   31                  17                      40"],"text/html":["\n","  <div id=\"df-9f6e95c1-d233-469e-bfb3-d356067c30bc\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CustomerID</th>\n","      <th>Genre</th>\n","      <th>Age</th>\n","      <th>Annual Income (k$)</th>\n","      <th>Spending Score (1-100)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>Male</td>\n","      <td>19</td>\n","      <td>15</td>\n","      <td>39</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>Male</td>\n","      <td>21</td>\n","      <td>15</td>\n","      <td>81</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>Female</td>\n","      <td>20</td>\n","      <td>16</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>Female</td>\n","      <td>23</td>\n","      <td>16</td>\n","      <td>77</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>Female</td>\n","      <td>31</td>\n","      <td>17</td>\n","      <td>40</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9f6e95c1-d233-469e-bfb3-d356067c30bc')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9f6e95c1-d233-469e-bfb3-d356067c30bc button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9f6e95c1-d233-469e-bfb3-d356067c30bc');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-32a1e539-9dca-465b-bd56-5eb9d09cfc07\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-32a1e539-9dca-465b-bd56-5eb9d09cfc07')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-32a1e539-9dca-465b-bd56-5eb9d09cfc07 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 200,\n  \"fields\": [\n    {\n      \"column\": \"CustomerID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 57,\n        \"min\": 1,\n        \"max\": 200,\n        \"num_unique_values\": 200,\n        \"samples\": [\n          96,\n          16,\n          31\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Genre\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Female\",\n          \"Male\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13,\n        \"min\": 18,\n        \"max\": 70,\n        \"num_unique_values\": 51,\n        \"samples\": [\n          55,\n          26\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Annual Income (k$)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 26,\n        \"min\": 15,\n        \"max\": 137,\n        \"num_unique_values\": 64,\n        \"samples\": [\n          87,\n          101\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Spending Score (1-100)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 25,\n        \"min\": 1,\n        \"max\": 99,\n        \"num_unique_values\": 84,\n        \"samples\": [\n          83,\n          39\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":9}]},{"cell_type":"markdown","source":["Записую усі назви стовпців (фічі) з DataFrame df у масив features."],"metadata":{"id":"NMmhdI3Jri2F"}},{"cell_type":"code","source":["features = []\n","for feature in df.columns:\n","  features.append(feature)\n","features"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WVKKyPuYpco4","executionInfo":{"status":"ok","timestamp":1715548520827,"user_tz":-180,"elapsed":343,"user":{"displayName":"Ferk “Кирил Бойко”","userId":"11765411755066296376"}},"outputId":"04c4fa85-15d3-448e-b276-45b6b15e8287"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['CustomerID', 'Genre', 'Age', 'Annual Income (k$)', 'Spending Score (1-100)']"]},"metadata":{},"execution_count":10}]},{"cell_type":"markdown","source":["Замінюю у стовпці Genre значення 'Female' на 0, а 'Male' на 1."],"metadata":{"id":"VzE6ysZ0rmaB"}},{"cell_type":"code","source":["df = df.replace({'Genre': {'Female': 0, 'Male': 1}})"],"metadata":{"id":"mbEKWV4LpzeN","executionInfo":{"status":"ok","timestamp":1715548523251,"user_tz":-180,"elapsed":343,"user":{"displayName":"Ferk “Кирил Бойко”","userId":"11765411755066296376"}}},"execution_count":11,"outputs":[]},{"cell_type":"markdown","source":["Створюю матрицю ознак X з даних df, потім використовую алгоритм K-means для кластеризації даних на 5 груп. Зберігаю мітки кластерів у y. Далі розбиваю дані на навчальний (X_train, y_train) та тестовий (X_test, y_test) набори у співвідношенні 70/30, використовуючи фіксований random_state для відтворюваності результатів."],"metadata":{"id":"rzYtmJX-ru6H"}},{"cell_type":"code","source":["X=df[features].values\n","y = KMeans(n_clusters=5, random_state=10).fit_predict(X)\n","X_train, X_test, y_train, y_test = train_test_split( X,y, test_size=0.3, random_state=11)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"T1V1v5_hp3sd","executionInfo":{"status":"ok","timestamp":1715548539148,"user_tz":-180,"elapsed":321,"user":{"displayName":"Ferk “Кирил Бойко”","userId":"11765411755066296376"}},"outputId":"ab8a2cc0-2750-4fa9-e84d-49a814931e88"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","  warnings.warn(\n"]}]},{"cell_type":"markdown","source":["Створюю модель випадкового лісу (RandomForestClassifier) зі 100 деревами та навчаю її на тренувальному наборі даних (X_train, y_train)."],"metadata":{"id":"DHp38dEfuOCe"}},{"cell_type":"code","source":["clf = RandomForestClassifier(n_estimators=100)\n","_=clf.fit(X_train,y_train)"],"metadata":{"id":"mJh7rUuQqWEI","executionInfo":{"status":"ok","timestamp":1715548992153,"user_tz":-180,"elapsed":330,"user":{"displayName":"Ferk “Кирил Бойко”","userId":"11765411755066296376"}}},"execution_count":13,"outputs":[]},{"cell_type":"markdown","source":["Роблю передбачення на тестовому наборі даних (X_test) за допомогою навченої моделі випадкового лісу та зберігаю результати у змінній pred."],"metadata":{"id":"QJXIUAKzuTJ_"}},{"cell_type":"code","source":["pred=clf.predict(X_test)"],"metadata":{"id":"cy_8wVkosEX-","executionInfo":{"status":"ok","timestamp":1715548999592,"user_tz":-180,"elapsed":352,"user":{"displayName":"Ferk “Кирил Бойко”","userId":"11765411755066296376"}}},"execution_count":14,"outputs":[]},{"cell_type":"markdown","source":["Обчислюю та виводжу матрицю невідповідностей (confusion matrix), щоб оцінити якість класифікації моделі, порівнюючи справжні мітки кластерів (`y_test`) з передбаченими (`pred`)."],"metadata":{"id":"QEdPGu5ruWaY"}},{"cell_type":"code","source":["confusion_matrix(y_test,pred)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wbtiuOwAsFd2","executionInfo":{"status":"ok","timestamp":1715549006465,"user_tz":-180,"elapsed":399,"user":{"displayName":"Ferk “Кирил Бойко”","userId":"11765411755066296376"}},"outputId":"70175794-105b-41f1-8c99-da6d349929d9"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 8,  0,  0,  0,  0],\n","       [ 0, 15,  0,  0,  1],\n","       [ 0,  1,  7,  0,  0],\n","       [ 1,  0,  0, 16,  0],\n","       [ 0,  0,  0,  0, 11]])"]},"metadata":{},"execution_count":15}]},{"cell_type":"markdown","source":["Обчислюю та виводжу звіт про класифікацію (classification report), щоб детальніше оцінити ефективність моделі для кожного кластера: precision, recall, f1-score та підтримку (кількість зразків у кластері)."],"metadata":{"id":"tUS0hCX2ucZJ"}},{"cell_type":"code","source":["classf_report=classification_report(y_test, pred)\n","print(classf_report)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RKsAzdR6sHnJ","executionInfo":{"status":"ok","timestamp":1715549012326,"user_tz":-180,"elapsed":340,"user":{"displayName":"Ferk “Кирил Бойко”","userId":"11765411755066296376"}},"outputId":"8de08d8c-c3e7-4c5d-c3cc-3046228f2621"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       0.89      1.00      0.94         8\n","           1       0.94      0.94      0.94        16\n","           2       1.00      0.88      0.93         8\n","           3       1.00      0.94      0.97        17\n","           4       0.92      1.00      0.96        11\n","\n","    accuracy                           0.95        60\n","   macro avg       0.95      0.95      0.95        60\n","weighted avg       0.95      0.95      0.95        60\n","\n"]}]},{"cell_type":"markdown","source":["Виводжу масив pred, який містить передбачені мітки кластерів для кожного об'єкта у тестовому наборі даних X_test."],"metadata":{"id":"93lqSLJtug_r"}},{"cell_type":"code","source":["pred"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Mg_0z5uPsIlH","executionInfo":{"status":"ok","timestamp":1715549016195,"user_tz":-180,"elapsed":329,"user":{"displayName":"Ferk “Кирил Бойко”","userId":"11765411755066296376"}},"outputId":"eaad744a-2de9-42d3-bb69-8e41a6e0dad2"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([4, 0, 2, 4, 3, 3, 4, 3, 2, 1, 3, 1, 4, 0, 3, 3, 3, 3, 1, 0, 0, 3,\n","       1, 1, 3, 4, 1, 4, 4, 0, 2, 0, 0, 3, 1, 3, 1, 2, 2, 1, 2, 2, 3, 1,\n","       1, 0, 3, 1, 1, 3, 3, 4, 1, 4, 4, 4, 1, 4, 0, 1], dtype=int32)"]},"metadata":{},"execution_count":17}]},{"cell_type":"markdown","source":["Обчислюю ймовірності належності кожного об'єкта у тестовому наборі X_test до кожного з кластерів. Результат зберігаю у змінній pred_proba. Кожен рядок масиву pred_proba міститиме ймовірності для одного об'єкта."],"metadata":{"id":"jIQoJOd5uiDL"}},{"cell_type":"code","source":["pred_proba=clf.predict_proba(X_test)"],"metadata":{"id":"LQROQztJsKQY","executionInfo":{"status":"ok","timestamp":1715549024103,"user_tz":-180,"elapsed":341,"user":{"displayName":"Ferk “Кирил Бойко”","userId":"11765411755066296376"}}},"execution_count":18,"outputs":[]},{"cell_type":"markdown","source":["Виводжу ймовірності належності перших 7 об'єктів з тестового набору X_test до кожного з кластерів. Кожен рядок відповідає одному об'єкту, а кожен стовпець - ймовірності для певного кластера."],"metadata":{"id":"PgjUa0yRuldS"}},{"cell_type":"code","source":["pred_proba[0:7]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vQnMDEtGsLlT","executionInfo":{"status":"ok","timestamp":1715549030510,"user_tz":-180,"elapsed":619,"user":{"displayName":"Ferk “Кирил Бойко”","userId":"11765411755066296376"}},"outputId":"92b70d7f-c728-4001-c56a-17ff5f9ec143"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0.  , 0.  , 0.  , 0.  , 1.  ],\n","       [0.99, 0.  , 0.01, 0.  , 0.  ],\n","       [0.  , 0.  , 0.94, 0.  , 0.06],\n","       [0.  , 0.  , 0.01, 0.  , 0.99],\n","       [0.01, 0.03, 0.  , 0.95, 0.01],\n","       [0.08, 0.01, 0.  , 0.91, 0.  ],\n","       [0.  , 0.02, 0.04, 0.  , 0.94]])"]},"metadata":{},"execution_count":19}]},{"cell_type":"markdown","source":["Створюю масив pred, заповнений нулями, довжиною, що дорівнює кількості об'єктів у початковому наборі даних X. Потім виводжу цей масив. Оскільки він щойно створений, усі його елементи дорівнюють нулю."],"metadata":{"id":"BU25ddZ6uoZd"}},{"cell_type":"code","source":["pred=np.zeros(X.shape[0])\n","pred"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LR5C3VyCsTek","executionInfo":{"status":"ok","timestamp":1715549061044,"user_tz":-180,"elapsed":342,"user":{"displayName":"Ferk “Кирил Бойко”","userId":"11765411755066296376"}},"outputId":"e64754e0-5de2-48e1-95fa-84466f13ffe0"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])"]},"metadata":{},"execution_count":20}]},{"cell_type":"markdown","source":["Виводжу масив y, який містить мітки кластерів, отримані за допомогою алгоритму K-means, для кожного об'єкта у наборі даних X."],"metadata":{"id":"DxKhZIRburYv"}},{"cell_type":"code","source":["y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"v4NaQwHBsUuc","executionInfo":{"status":"ok","timestamp":1715549066050,"user_tz":-180,"elapsed":362,"user":{"displayName":"Ferk “Кирил Бойко”","userId":"11765411755066296376"}},"outputId":"4ce95cbf-51b1-467f-dd50-f9dedeb5e76a"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 0, 3, 0, 0, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0,\n","       3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 3,\n","       3, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1,\n","       1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n","       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n","       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 4, 2, 4, 2,\n","       4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2,\n","       4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2,\n","       4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2,\n","       4, 2], dtype=int32)"]},"metadata":{},"execution_count":21}]},{"cell_type":"markdown","source":["Здійснюю 5-кратну крос-валідацію з перемішуванням даних (shuffle=True) та фіксованим зерном генератора випадкових чисел (random_state=10).\n","\n","У кожній ітерації:\n","\n","Дані ділю на навчальний (train_index) та тестовий (test_index) набори.\n","Створюю нова модель випадкового лісу (RandomForestClassifier) зі 100 деревами.\n","Модель навчаю на поточному навчальному наборі (X[train_index,:], y[train_index]).\n","Модель робить передбачення для тестового набору (X[test_index,:]) та зберігає їх у відповідну частину масиву pred.\n","Таким чином, у результаті виконання цього коду, масив pred міститиме передбачені мітки кластерів для всіх об'єктів з початкового набору даних X, отримані шляхом крос-валідації.**bold text**"],"metadata":{"id":"qG3QdEExuvtj"}},{"cell_type":"code","source":["kf = KFold(n_splits=5, shuffle=True, random_state=10)\n","for i, (train_index, test_index) in enumerate(kf.split(X)):\n","    clf = RandomForestClassifier(n_estimators=100)\n","    print (f'\\nFold {i}')\n","    clf.fit(X[train_index,:], y[train_index])\n","    pred[test_index]= clf.predict(X[test_index,:])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"x-2pWgGXsV9o","executionInfo":{"status":"ok","timestamp":1715549073546,"user_tz":-180,"elapsed":2646,"user":{"displayName":"Ferk “Кирил Бойко”","userId":"11765411755066296376"}},"outputId":"1a940249-36f8-4b3e-d7be-8413a0d08cc5"},"execution_count":22,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Fold 0\n","\n","Fold 1\n","\n","Fold 2\n","\n","Fold 3\n","\n","Fold 4\n"]}]},{"cell_type":"markdown","source":["Обчислюю та виводжу звіт про класифікацію (classification report), щоб детально оцінити ефективність моделі випадкового лісу, навченої за допомогою крос-валідації, на початковому наборі даних. У звіті буде представлена інформація про precision, recall, f1-score та підтримку (кількість зразків) для кожного кластера, а також середні значення цих метрик."],"metadata":{"id":"oGIkmW3ruy6p"}},{"cell_type":"code","source":["print(classification_report(y, pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"v38efvPbsX6E","executionInfo":{"status":"ok","timestamp":1715549079643,"user_tz":-180,"elapsed":442,"user":{"displayName":"Ferk “Кирил Бойко”","userId":"11765411755066296376"}},"outputId":"7a22e226-a4d7-44e6-fe07-c539bb1898b2"},"execution_count":23,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       0.91      0.83      0.87        24\n","           1       0.97      0.97      0.97        59\n","           2       1.00      0.97      0.99        39\n","           3       0.91      0.93      0.92        42\n","           4       0.95      1.00      0.97        36\n","\n","    accuracy                           0.95       200\n","   macro avg       0.95      0.94      0.94       200\n","weighted avg       0.95      0.95      0.95       200\n","\n"]}]},{"cell_type":"markdown","source":["Обчислюю та виводжу матрицю невідповідностей (confusion matrix), щоб оцінити якість кластеризації, отриманої за допомогою крос-валідації моделі випадкового лісу, порівнюючи справжні мітки кластерів (y) з передбаченими (pred) на початковому наборі даних."],"metadata":{"id":"SYWI2aZlu2Mq"}},{"cell_type":"code","source":["confusion_matrix(y,pred)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8Y8QjuvysZVY","executionInfo":{"status":"ok","timestamp":1715549085528,"user_tz":-180,"elapsed":350,"user":{"displayName":"Ferk “Кирил Бойко”","userId":"11765411755066296376"}},"outputId":"0a82bee2-2c6b-4486-c546-e1ada3bc0965"},"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[20,  0,  0,  4,  0],\n","       [ 0, 57,  0,  0,  2],\n","       [ 0,  1, 38,  0,  0],\n","       [ 2,  1,  0, 39,  0],\n","       [ 0,  0,  0,  0, 36]])"]},"metadata":{},"execution_count":24}]},{"cell_type":"markdown","source":["Розбиваю дані на 5 складок, створюю модель випадкового лісу та провів крос-валідацію, отримую передбачення для всіх об'єктів. Додаю ці передбачення як новий стовпець pred до DataFrame df."],"metadata":{"id":"IMr_GvrRvC_u"}},{"cell_type":"code","source":["kf = KFold(n_splits = 5, shuffle = True,  random_state = 10)\n","clf = RandomForestClassifier(n_estimators=100)\n","pred = cross_val_predict(clf, X, y, cv = kf, method = 'predict')\n","df['pred']=pred"],"metadata":{"id":"_HcRFG8msalB","executionInfo":{"status":"ok","timestamp":1715549091574,"user_tz":-180,"elapsed":1662,"user":{"displayName":"Ferk “Кирил Бойко”","userId":"11765411755066296376"}}},"execution_count":25,"outputs":[]},{"cell_type":"markdown","source":["Виводжу перші 5 рядків DataFrame df, який тепер містить новий стовпець pred з передбаченими мітками кластерів."],"metadata":{"id":"oacnqhwWvGt4"}},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"keDbQ-bzsb11","executionInfo":{"status":"ok","timestamp":1715549095298,"user_tz":-180,"elapsed":379,"user":{"displayName":"Ferk “Кирил Бойко”","userId":"11765411755066296376"}},"outputId":"4295a056-bf59-44ab-e049-80c7d14b5f2a"},"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   CustomerID  Genre  Age  Annual Income (k$)  Spending Score (1-100)  pred\n","0           1      1   19                  15                      39     3\n","1           2      1   21                  15                      81     0\n","2           3      0   20                  16                       6     0\n","3           4      0   23                  16                      77     0\n","4           5      0   31                  17                      40     3"],"text/html":["\n","  <div id=\"df-1ca83f35-905b-4b36-a7ca-1d4e16e32f14\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CustomerID</th>\n","      <th>Genre</th>\n","      <th>Age</th>\n","      <th>Annual Income (k$)</th>\n","      <th>Spending Score (1-100)</th>\n","      <th>pred</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>19</td>\n","      <td>15</td>\n","      <td>39</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>21</td>\n","      <td>15</td>\n","      <td>81</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>16</td>\n","      <td>6</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>23</td>\n","      <td>16</td>\n","      <td>77</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>31</td>\n","      <td>17</td>\n","      <td>40</td>\n","      <td>3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1ca83f35-905b-4b36-a7ca-1d4e16e32f14')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1ca83f35-905b-4b36-a7ca-1d4e16e32f14 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1ca83f35-905b-4b36-a7ca-1d4e16e32f14');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3d0a1ac3-7041-443a-8c84-85544d373370\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3d0a1ac3-7041-443a-8c84-85544d373370')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3d0a1ac3-7041-443a-8c84-85544d373370 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 200,\n  \"fields\": [\n    {\n      \"column\": \"CustomerID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 57,\n        \"min\": 1,\n        \"max\": 200,\n        \"num_unique_values\": 200,\n        \"samples\": [\n          96,\n          16,\n          31\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Genre\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13,\n        \"min\": 18,\n        \"max\": 70,\n        \"num_unique_values\": 51,\n        \"samples\": [\n          55,\n          26\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Annual Income (k$)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 26,\n        \"min\": 15,\n        \"max\": 137,\n        \"num_unique_values\": 64,\n        \"samples\": [\n          87,\n          101\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Spending Score (1-100)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 25,\n        \"min\": 1,\n        \"max\": 99,\n        \"num_unique_values\": 84,\n        \"samples\": [\n          83,\n          39\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pred\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":26}]},{"cell_type":"markdown","source":["Повторно проводжу крос-валідацію, використовуючи ту саму модель випадкового лісу та розбиття на 5 складок, та отримую оновлені передбачення для всіх об'єктів. Зберіг їх у змінній pred."],"metadata":{"id":"4EGKxnauvJqB"}},{"cell_type":"code","source":["pred = cross_val_predict(clf, X, y, cv = kf, method = 'predict')"],"metadata":{"id":"txNcU9plsdBV","executionInfo":{"status":"ok","timestamp":1715549101575,"user_tz":-180,"elapsed":1543,"user":{"displayName":"Ferk “Кирил Бойко”","userId":"11765411755066296376"}}},"execution_count":27,"outputs":[]},{"cell_type":"markdown","source":["Проводжу крос-валідацію, використовуючи ту саму модель випадкового лісу та розбиття на 5 складок, та отримую ймовірності належності кожного об'єкта до кожного кластера. Зберігаю ці ймовірності у змінній pred_proba."],"metadata":{"id":"3GrWCD46vOvt"}},{"cell_type":"code","source":["pred_proba = cross_val_predict(clf, X, y, cv = kf, method = 'predict_proba')"],"metadata":{"id":"E_Kt2Vqzsd9m","executionInfo":{"status":"ok","timestamp":1715549104869,"user_tz":-180,"elapsed":1359,"user":{"displayName":"Ferk “Кирил Бойко”","userId":"11765411755066296376"}}},"execution_count":28,"outputs":[]},{"cell_type":"markdown","source":["Виводжу ймовірності належності перших 10 об'єктів до кожного кластера, отримані за допомогою крос-валідації."],"metadata":{"id":"uz9XlY2cvSSK"}},{"cell_type":"code","source":["pred_proba[:10]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qbd0-cjvsfDm","executionInfo":{"status":"ok","timestamp":1715549108958,"user_tz":-180,"elapsed":2,"user":{"displayName":"Ferk “Кирил Бойко”","userId":"11765411755066296376"}},"outputId":"1b0618b7-41ba-47f6-f284-e3608452e438"},"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0.54, 0.01, 0.  , 0.45, 0.  ],\n","       [0.99, 0.  , 0.  , 0.01, 0.  ],\n","       [0.65, 0.02, 0.  , 0.32, 0.01],\n","       [0.9 , 0.01, 0.  , 0.09, 0.  ],\n","       [0.26, 0.  , 0.  , 0.74, 0.  ],\n","       [0.99, 0.  , 0.  , 0.01, 0.  ],\n","       [0.09, 0.  , 0.  , 0.9 , 0.01],\n","       [1.  , 0.  , 0.  , 0.  , 0.  ],\n","       [0.03, 0.  , 0.  , 0.97, 0.  ],\n","       [0.98, 0.  , 0.  , 0.02, 0.  ]])"]},"metadata":{},"execution_count":29}]},{"cell_type":"markdown","source":["Додаю стовпець clusters до DataFrame df зі справжніми мітками кластерів та обчислюю точність (accuracy_score) між справжніми (df['clusters']) та передбаченими (df['pred']) мітками. Виводжу результат, що відображає, наскільки добре модель випадкового лісу з крос-валідацією змогла передбачити кластери."],"metadata":{"id":"Qkr5KPJYvVoP"}},{"cell_type":"code","source":["df['clusters']=y\n","acc_score = accuracy_score(df['clusters'], df['pred'])\n","acc_score"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2FR4CyHWsf-D","executionInfo":{"status":"ok","timestamp":1715549164849,"user_tz":-180,"elapsed":3,"user":{"displayName":"Ferk “Кирил Бойко”","userId":"11765411755066296376"}},"outputId":"014730c6-ad0e-418f-a568-76a4b889650c"},"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.95"]},"metadata":{},"execution_count":34}]},{"cell_type":"markdown","source":["Обчислюю та виводжу матрицю невідповідностей (confusion matrix), щоб оцінити якість кластеризації, отриманої за допомогою крос-валідації моделі випадкового лісу, порівнюючи справжні мітки кластерів (df['clusters']) з передбаченими (df['pred']) на початковому наборі даних."],"metadata":{"id":"HCbemxU3vZ1S"}},{"cell_type":"code","source":["confusion_matrix(df['clusters'], df['pred'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hRgFrFQosnam","executionInfo":{"status":"ok","timestamp":1715549181257,"user_tz":-180,"elapsed":344,"user":{"displayName":"Ferk “Кирил Бойко”","userId":"11765411755066296376"}},"outputId":"e7792e3e-005f-4d42-a058-8b573b3af91d"},"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[20,  0,  0,  4,  0],\n","       [ 0, 57,  0,  1,  1],\n","       [ 0,  1, 38,  0,  0],\n","       [ 2,  1,  0, 39,  0],\n","       [ 0,  0,  0,  0, 36]])"]},"metadata":{},"execution_count":35}]},{"cell_type":"markdown","source":["Обчислюю два типи середнього значення F1-міри:\n","\n","Micro F1: Обчислюється глобально, враховуючи загальну кількість правильно та неправильно класифікованих об'єктів. Виводжу цей результат.\n","Macro F1: Обчислюється як середнє значення F1-міри для кожного кластера окремо, без урахування їх розмірів. Виводжу цей результат."],"metadata":{"id":"U0ejoOHIvdny"}},{"cell_type":"code","source":["f1_score(df['clusters'], df['pred'], average='micro'), f1_score(df['clusters'], df['pred'], average='macro')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fMvq69pasx34","executionInfo":{"status":"ok","timestamp":1715549198443,"user_tz":-180,"elapsed":366,"user":{"displayName":"Ferk “Кирил Бойко”","userId":"11765411755066296376"}},"outputId":"bc5b2999-d462-4abe-fa0d-0a136cacfcff"},"execution_count":36,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(0.9500000000000001, 0.943191602673721)"]},"metadata":{},"execution_count":36}]},{"cell_type":"markdown","source":["Виводжу стовпець pred з DataFrame df, який містить передбачені мітки кластерів для кожного об'єкта, отримані за допомогою крос-валідації моделі випадкового лісу."],"metadata":{"id":"2LJeo9c8veMr"}},{"cell_type":"code","source":["df['pred']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"J1KgL516s2B-","executionInfo":{"status":"ok","timestamp":1715549203189,"user_tz":-180,"elapsed":465,"user":{"displayName":"Ferk “Кирил Бойко”","userId":"11765411755066296376"}},"outputId":"41052103-fdde-43bd-a767-240bd5556689"},"execution_count":37,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0      3\n","1      0\n","2      0\n","3      0\n","4      3\n","      ..\n","195    2\n","196    4\n","197    2\n","198    4\n","199    2\n","Name: pred, Length: 200, dtype: int32"]},"metadata":{},"execution_count":37}]},{"cell_type":"markdown","source":[],"metadata":{"id":"6e81zjKFviZY"}},{"cell_type":"markdown","source":["Виводжу стовпець clusters з DataFrame df, який містить справжні мітки кластерів для кожного об'єкта."],"metadata":{"id":"MF_L-1ypvmTu"}},{"cell_type":"code","source":["df['clusters']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"j68RWikxs3Qz","executionInfo":{"status":"ok","timestamp":1715549216385,"user_tz":-180,"elapsed":315,"user":{"displayName":"Ferk “Кирил Бойко”","userId":"11765411755066296376"}},"outputId":"365ce2be-70a7-42d7-eb92-964e80566284"},"execution_count":38,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0      0\n","1      0\n","2      3\n","3      0\n","4      0\n","      ..\n","195    2\n","196    4\n","197    2\n","198    4\n","199    2\n","Name: clusters, Length: 200, dtype: int32"]},"metadata":{},"execution_count":38}]},{"cell_type":"markdown","source":["Обчислюю та виводжу значення логарифмічної втрати (log loss) між справжніми мітками кластерів (df['clusters'].values) та ймовірностями належності до кластерів (pred_proba), отриманими за допомогою крос-валідації моделі випадкового лісу. Ця метрика оцінює якість ймовірнісних передбачень моделі, показуючи, наскільки вони близькі до справжніх міток."],"metadata":{"id":"4MTnDVBAvtHm"}},{"cell_type":"code","source":["log_loss(df['clusters'].values, pred_proba)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"B-3Pr3qbs6qP","executionInfo":{"status":"ok","timestamp":1715549225624,"user_tz":-180,"elapsed":443,"user":{"displayName":"Ferk “Кирил Бойко”","userId":"11765411755066296376"}},"outputId":"c2a8d5a1-ee54-4222-c007-434762670900"},"execution_count":39,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.1169324604761807"]},"metadata":{},"execution_count":39}]},{"cell_type":"markdown","source":["Обчислюю середнє значення recall (повноти) для кожного кластера окремо, без урахування їх розмірів, та виводжу результат. Це дає уявлення про те, наскільки добре модель виявляє об'єкти кожного кластера."],"metadata":{"id":"GT4mm9Lfvw0V"}},{"cell_type":"code","source":["recall_score(df['clusters'], df['pred'], average='macro')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pyzgJ17us839","executionInfo":{"status":"ok","timestamp":1715549237385,"user_tz":-180,"elapsed":396,"user":{"displayName":"Ferk “Кирил Бойко”","userId":"11765411755066296376"}},"outputId":"35a7479f-63ad-40e5-fc5f-4d90683eea17"},"execution_count":41,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.9404730862357982"]},"metadata":{},"execution_count":41}]},{"cell_type":"markdown","source":["Обчислив середнє значення precision (точності) для кожного кластера окремо, без урахування їх розмірів, та вивів результат. Це дає уявлення про те, наскільки \"чисті\" є передбачені кластери, тобто наскільки часто модель правильно відносить об'єкти до кластерів."],"metadata":{"id":"vOPN37a-v0XF"}},{"cell_type":"code","source":["precision_score(df['clusters'], df['pred'], average='macro')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_WdS0k3ts_sH","executionInfo":{"status":"ok","timestamp":1715549250667,"user_tz":-180,"elapsed":2,"user":{"displayName":"Ferk “Кирил Бойко”","userId":"11765411755066296376"}},"outputId":"afc3d31d-99c4-4203-f2ae-3ec38656cae2"},"execution_count":43,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.9469058426685546"]},"metadata":{},"execution_count":43}]},{"cell_type":"markdown","source":["Навчаю модель наївного Байєса (GaussianNB) на тренувальному наборі (X_train, y_train) та роблю передбачення на тестовому наборі (X_test). Обчислюю і виводжу звіт про класифікацію (classification_report), щоб оцінити якість моделі на тестовому наборі."],"metadata":{"id":"auAGybQ7v2ph"}},{"cell_type":"code","source":["clf = GaussianNB()\n","_=clf.fit(X_train,y_train)\n","pred=clf.predict(X_test)\n","classf_report=classification_report(y_test, pred)\n","print(classf_report)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IG_hwUO0tA0C","executionInfo":{"status":"ok","timestamp":1715549256099,"user_tz":-180,"elapsed":337,"user":{"displayName":"Ferk “Кирил Бойко”","userId":"11765411755066296376"}},"outputId":"2378cc71-5252-408e-b3a2-6142a9b9f947"},"execution_count":44,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       1.00      1.00      1.00         8\n","           1       0.94      0.94      0.94        16\n","           2       1.00      1.00      1.00         8\n","           3       1.00      0.94      0.97        17\n","           4       0.92      1.00      0.96        11\n","\n","    accuracy                           0.97        60\n","   macro avg       0.97      0.98      0.97        60\n","weighted avg       0.97      0.97      0.97        60\n","\n"]}]},{"cell_type":"markdown","source":["Навчаю модель опорних векторів (SVC) на тренувальному наборі (X_train, y_train) та роблю передбачення на тестовому наборі (X_test). Обчислюю та виводжу звіт про класифікацію (classification_report), щоб оцінити якість моделі на тестовому наборі."],"metadata":{"id":"20qdNHbPv6al"}},{"cell_type":"code","source":["clf = svm.SVC()\n","_=clf.fit(X_train,y_train)\n","pred=clf.predict(X_test)\n","classf_report=classification_report(y_test, pred)\n","print(classf_report)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mlauDMUdtEeG","executionInfo":{"status":"ok","timestamp":1715549261571,"user_tz":-180,"elapsed":392,"user":{"displayName":"Ferk “Кирил Бойко”","userId":"11765411755066296376"}},"outputId":"84390243-cfbb-4a73-f04c-ee3fab79d770"},"execution_count":45,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       1.00      1.00      1.00         8\n","           1       0.89      1.00      0.94        16\n","           2       1.00      1.00      1.00         8\n","           3       1.00      0.88      0.94        17\n","           4       1.00      1.00      1.00        11\n","\n","    accuracy                           0.97        60\n","   macro avg       0.98      0.98      0.98        60\n","weighted avg       0.97      0.97      0.97        60\n","\n"]}]},{"cell_type":"markdown","source":["Розбиваю дані на 5 складок, створюю модель опорних векторів (SVC) і проводжу крос-валідацію, отримавши передбачення для всіх об'єктів. Обчислюю та виводжу звіт про класифікацію, щоб оцінити якість моделі на основі справжніх міток кластерів та отриманих передбачень."],"metadata":{"id":"dc9Z1Wqbv9qP"}},{"cell_type":"code","source":["kf = KFold(n_splits = 5, shuffle = True,  random_state = 10)\n","clf = svm.SVC()\n","pred = cross_val_predict(clf, X, y, cv = kf, method = 'predict')\n","classf_report=classification_report(df['clusters'].values, pred)\n","print(classf_report)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5BfBWfH8tFop","executionInfo":{"status":"ok","timestamp":1715549270945,"user_tz":-180,"elapsed":355,"user":{"displayName":"Ferk “Кирил Бойко”","userId":"11765411755066296376"}},"outputId":"ecf1c879-4e24-4636-a0e8-c5b6b4fdabd1"},"execution_count":46,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       1.00      0.92      0.96        24\n","           1       0.98      0.95      0.97        59\n","           2       1.00      1.00      1.00        39\n","           3       0.89      0.98      0.93        42\n","           4       1.00      1.00      1.00        36\n","\n","    accuracy                           0.97       200\n","   macro avg       0.97      0.97      0.97       200\n","weighted avg       0.97      0.97      0.97       200\n","\n"]}]},{"cell_type":"markdown","source":["Навчаю модель k найближчих сусідів (KNeighborsClassifier) з 3 сусідами на тренувальному наборі (X_train, y_train) та роблю передбачення на тестовому наборі (X_test). Обчислюю і виводжу звіт про класифікацію (classification_report), щоб оцінити якість моделі на тестовому наборі."],"metadata":{"id":"4lTw3U5FwAQN"}},{"cell_type":"code","source":["clf = KNeighborsClassifier(n_neighbors=3)\n","_=clf.fit(X_train,y_train)\n","pred=clf.predict(X_test)\n","classf_report=classification_report(y_test, pred)\n","print(classf_report)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"C3c2IDE8tH4U","executionInfo":{"status":"ok","timestamp":1715549276423,"user_tz":-180,"elapsed":2,"user":{"displayName":"Ferk “Кирил Бойко”","userId":"11765411755066296376"}},"outputId":"79e5f651-40fa-4db6-c9c8-3b14874fa726"},"execution_count":47,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       1.00      1.00      1.00         8\n","           1       0.94      1.00      0.97        16\n","           2       1.00      1.00      1.00         8\n","           3       1.00      0.94      0.97        17\n","           4       1.00      1.00      1.00        11\n","\n","    accuracy                           0.98        60\n","   macro avg       0.99      0.99      0.99        60\n","weighted avg       0.98      0.98      0.98        60\n","\n"]}]},{"cell_type":"markdown","source":["За допомогою GridSearchCV визначаю найкращий параметр n_neighbors (кількість сусідів) для моделі k найближчих сусідів (KNeighborsClassifier) шляхом перебору значень [1, 3, 5, 7] та 7-кратної крос-валідації. Виводжу значення найкращого параметра, яке максимізує точність моделі на крос-валідації."],"metadata":{"id":"8tdgWlOHwDAq"}},{"cell_type":"code","source":["parameters = {'n_neighbors':[1,3,5,7]}\n","knn=KNeighborsClassifier()\n","clf = GridSearchCV(knn, param_grid=parameters,\n","                      scoring='accuracy',\n","                      cv=7)\n","_=clf.fit(X_train,y_train)\n","clf.best_params_"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hgZO3hNdtI-a","executionInfo":{"status":"ok","timestamp":1715549280149,"user_tz":-180,"elapsed":373,"user":{"displayName":"Ferk “Кирил Бойко”","userId":"11765411755066296376"}},"outputId":"a6c497d1-c8de-497f-fb6b-cb8fec50132d"},"execution_count":48,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'n_neighbors': 5}"]},"metadata":{},"execution_count":48}]}]}